# IVerilog on Windows

Icarus Verilog is a simulator that is available on Windows free of charge.
It comes in the form of a Windows Installer which is very small in size.

Download Icarus Verilog from https://bleyer.org/icarus/

After installation (with default settings), the executable is located here:

```
C:\iverilog\bin\iverilog.exe
```

iverilog.exe is a command line tool and it does not have a graphical UI.

## The Icarus Verilog workflow on Windows

In a first step, verilog code is written to verilog source files.
Then the iverilog.exe binary is used to tranlate the verilog code to vvp code.
Then, that vvp code is executed using the vvp.exe.

```
C:\iverilog\bin\iverilog.exe
```

It is possible to execute modules directly or execute testbenches on modules.

Compiling only a single module:

```
C:\iverilog\bin\iverilog.exe -o hello.vpp hello.v
C:\iverilog\bin\vvp.exe hello.vpp
```

Compiling a testbench and a module:

```
C:\iverilog\bin\iverilog.exe -o my_design counter_tb.v counter.v
C:\iverilog\bin\vvp.exe my_design.vpp
```

Icarus Verilog parses all modules from all input files. It will then figure out
which modules are not instantiated within other modules. In other words Icarus
Verilog produces a set of top-level modules which are not instantiated anywhere.

Icarus Verilog will then simulate all top-level modules.

If you only want to simulate a specific module, then you have to use the -s
command line parameter and specify the name of the top-level module you want
to simulate.

## Getting started

A getting started tutorial is located here: https://steveicarus.github.io/iverilog/usage/getting_started.html

## Loading data into memory

https://projectf.io/posts/initialize-memory-in-verilog/
https://stackoverflow.com/questions/66824196/icarus-verilog-warning-readmemh-standard-inconsistency-following-1364-2005

It seems that Icarus Verilog supports the $readmemh() primitive which can be used
to load data into memory.

```
module readmemh_tb();
    reg [7:0] test_memory [0:15];
    initial begin
        $display("Loading rom.");
        $readmemh("rom_image.mem", test_memory);
    end
endmodule
```